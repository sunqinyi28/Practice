    public void backtrack(int n,List<List<Integer>> list0,List<Integer> list1,int now){
        if(now==n){
            list0.add(new ArrayList<Integer>(list1));
        }
        for(int i=now;i<n;i++){
            Collections.swap(list1,now,i);
            backtrack(n,list0,list1,now+1);
            Collections.swap(list1,now,i);
        }
    }
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> list0=new ArrayList<>();
        List<Integer> list1=new ArrayList<>();
        for(int i:nums){
            list1.add(i);
        }
        int n=nums.length;
        backtrack(n,list0,list1,0);
        return list0;
    }
