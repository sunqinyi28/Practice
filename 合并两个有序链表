/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {//普通方法
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if (l2 == null) return l1;
        if (l1 == null) return l2;
        ListNode l3=new ListNode();
        ListNode head=l3;
        //ListNode head=l1.val < l2.val ? l1 : l2;
        while((l1!=null)||(l2!=null)){
            if((l1==null)||(l2==null)){
                l3.next= l1==null ? l2 : l1;
                break;
            }else if(l1.val<=l2.val){
                l3.next=new ListNode(l1.val);
                l3=l3.next;
                l1=l1.next;
                continue;
            }else if(l2.val<=l1.val){
                l3.next=new ListNode(l2.val);
                l3=l3.next;
                l2=l2.next;
                continue;
            }
            
        }
        return head.next;
    }
/*class Solution {//递归方法
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if (l1 == null) {
            return l2;
        }
        if (l2 == null) {
            return l1;
        }
        if (l1.val <= l2.val) {
            l1.next = mergeTwoLists(l1.next, l2);
            return l1;
        } else {
            l2.next = mergeTwoLists(l1, l2.next);
            return l2;
        }
    }
}*/
