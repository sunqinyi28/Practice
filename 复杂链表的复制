/*
// Definition for a Node.
class Node {
    int val;
    Node next;
    Node random;

    public Node(int val) {
        this.val = val;
        this.next = null;
        this.random = null;
    }
}
*/
class Solution {
    public Node copyRandomList(Node head) {
        if(head == null) return null;
        Node cur = head;
        while(cur != null){//节点变为双倍
            Node nt = cur.next;
            cur.next = new Node(cur.val);
            cur.next.next = nt;
            cur = cur.next.next;
        }
        cur = head;
        while(cur != null){//复制随机节点
            if(cur.random != null){
                cur.next.random = cur.random.next;
            }
            cur = cur.next.next;
        }
        Node copyHead = head.next;
        cur = head;
        Node copyNode = head.next;
        while(cur != null){//分割节点
            cur.next = cur.next.next;
            cur = cur.next;
            if(copyHead.next != null){
                copyHead.next = copyHead.next.next;
                copyHead = copyHead.next;
            }
        }
        return copyNode;
    }
}
